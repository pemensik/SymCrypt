diff -ruN SymCrypt-103.1.0/cmake-configs/SymCrypt-Platforms.cmake SymCrypt-103.1.0-mod/cmake-configs/SymCrypt-Platforms.cmake
--- SymCrypt-103.1.0/cmake-configs/SymCrypt-Platforms.cmake	2023-01-18 04:59:02.000000000 +0300
+++ SymCrypt-103.1.0-mod/cmake-configs/SymCrypt-Platforms.cmake	2023-01-21 08:35:44.040583177 +0300
@@ -34,21 +34,10 @@
     endif()
 
     # Architecture-specific compiler flags
-    if(SYMCRYPT_TARGET_ARCH MATCHES "AMD64")
-        # Enable a baseline of features for the compiler to support everywhere
-        # Other than SSSE3 we do not expect the compiler to generate these instructions except with intrinsics
-        #
-        # We cannot globally enable AVX and later, as we need to keep use of these instructions behind CPU detection,
-        # and the instructions are definitely useful enough for a smart compiler to use them in C code (i.e. in memcpy)
-        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mssse3 -mxsave -maes -mpclmul -msha -mrdrnd -mrdseed")
-    elseif(SYMCRYPT_TARGET_ARCH MATCHES "X86")
+    if(SYMCRYPT_TARGET_ARCH MATCHES "X86")
         add_compile_options("-m32")
         add_link_options("-m32")
-    elseif(SYMCRYPT_TARGET_ARCH MATCHES "ARM64")
-        # Enable a baseline of features for the compiler to support everywhere
-        # Assumes that the compiler will not emit crypto instructions as a result of normal C code
-        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=armv8-a+simd+crypto")
-    endif()
+   endif()
     
     # add_compile_options(-Wall)
     # add_compile_options(-Wno-unknown-pragmas)
@@ -71,13 +60,6 @@
     # using GCC-specific pragmas for the loops of interest)
     add_compile_options(-fno-unroll-loops)
 
-    # Do not optimize Debug builds
-    if (CMAKE_BUILD_TYPE MATCHES Debug)
-        add_compile_options(-O0)
-    else()
-        add_compile_options(-O3)
-    endif()
-
     # In Sanitize version, enable sanitizers
     if (CMAKE_BUILD_TYPE MATCHES Sanitize)
         add_compile_options(-fsanitize=address)
@@ -166,4 +148,4 @@
             add_compile_options(/bigobj)
         endif()
     endif()
-endif()
\ No newline at end of file
+endif()
diff -ruN SymCrypt-103.1.0/inc/buildInfo.h SymCrypt-103.1.0-mod/inc/buildInfo.h
--- SymCrypt-103.1.0/inc/buildInfo.h	1970-01-01 03:00:00.000000000 +0300
+++ SymCrypt-103.1.0-mod/inc/buildInfo.h	2023-01-21 05:26:04.805808528 +0300
@@ -0,0 +1,8 @@
+#include "symcrypt_internal_shared.inc"
+
+#define _SYMCRYPT_JOIN(a, b) #a "." #b
+#define _SYMCRYPT_EXPAND_JOIN(a, b) _SYMCRYPT_JOIN(a, b)
+#define SYMCRYPT_BUILD_INFO_BRANCH    ""
+#define SYMCRYPT_BUILD_INFO_COMMIT    ""
+#define SYMCRYPT_BUILD_INFO_VERSION   _SYMCRYPT_EXPAND_JOIN(_SYMCRYPT_EXPAND_JOIN(SYMCRYPT_CODE_VERSION_API, SYMCRYPT_CODE_VERSION_MINOR), SYMCRYPT_CODE_VERSION_PATCH)
+#define SYMCRYPT_BUILD_INFO_TIMESTAMP "2023-01-21T05:26:04"
diff -ruN SymCrypt-103.1.0/modules_linux/common/CMakeLists.txt SymCrypt-103.1.0-mod/modules_linux/common/CMakeLists.txt
--- SymCrypt-103.1.0/modules_linux/common/CMakeLists.txt	2023-01-18 04:59:02.000000000 +0300
+++ SymCrypt-103.1.0-mod/modules_linux/common/CMakeLists.txt	2023-01-20 22:32:19.553106484 +0300
@@ -6,25 +6,4 @@
 
 add_library(symcrypt_module_linux_common STATIC ${SOURCES})
 
-set(jitter_cflags "${CMAKE_C_FLAGS} -fwrapv -fvisibility=hidden -DCONFIG_CRYPTO_CPU_JITTERENTROPY_SECURE_MEMORY")
-set(jitter_ldflags "")
-
-if(SYMCRYPT_TARGET_ARCH MATCHES "X86")
-  set(jitter_cflags "${jitter_cflags} -m32")
-  set(jitter_ldflags "-m32")
-endif()
-
-if (CMAKE_C_COMPILER_ID MATCHES "Clang" AND DEFINED CMAKE_C_COMPILER_TARGET)
-  set(jitter_cflags "--target=${CMAKE_C_COMPILER_TARGET} --sysroot=${CMAKE_SYSROOT_COMPILE} ${jitter_cflags}")
-  set(jitter_ldflags "--target=${CMAKE_C_COMPILER_TARGET}")
-endif()
-
-add_custom_target(jitterentropy_lib ALL
-  COMMAND make clean
-  COMMAND ${CMAKE_COMMAND} -E
-    env "CC=${CMAKE_C_COMPILER}"
-    env "CFLAGS=${jitter_cflags}"
-    env "LDFLAGS=${jitter_ldflags}"
-    make
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/3rdparty/jitterentropy-library
-)
\ No newline at end of file
+target_link_libraries(symcrypt_module_linux_common jitterentropy)
diff -ruN SymCrypt-103.1.0/modules_linux/generic/CMakeLists.txt SymCrypt-103.1.0-mod/modules_linux/generic/CMakeLists.txt
--- SymCrypt-103.1.0/modules_linux/generic/CMakeLists.txt	2023-01-18 04:59:02.000000000 +0300
+++ SymCrypt-103.1.0-mod/modules_linux/generic/CMakeLists.txt	2023-01-20 22:34:33.885691904 +0300
@@ -10,14 +10,14 @@
     list(APPEND SOURCES ../common/nointegrity.c)
 endif()
 
-include_directories(${CMAKE_SOURCE_DIR}/inc ../common ${CMAKE_SOURCE_DIR}/3rdparty/jitterentropy-library)
+include_directories(${CMAKE_SOURCE_DIR}/inc ../common)
 
 add_library(symcrypt_generic_linux SHARED ${SOURCES})
 
 # Link jitterentropy and libatomic
-target_link_libraries(symcrypt_generic_linux ${CMAKE_SOURCE_DIR}/3rdparty/jitterentropy-library/libjitterentropy.a pthread atomic)
+target_link_libraries(symcrypt_generic_linux jitterentropy pthread atomic)
 
 set(TARGET_NAME symcrypt_generic_linux)
 set(OUTPUT_DIR ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/generic)
 
-include(../common/ModuleCommon.cmake)
\ No newline at end of file
+include(../common/ModuleCommon.cmake)
